#2. DSG ANALYSES, Brain manuscript (in press, 2024), from data gotten using Rmats
#GO analysis on DSG
#Shown here is male vs female comparison, same analysis for other comparisons

#Choose the comparison to perform by setting up the folder 
setwd("C:/Users/molen/Desktop/transcriptomics_analysis/Splicing analysis/brains_april23/out_MBvsNB") #male vs female

library(reshape)

#We detect each type of differentially spliced genes between 2 treatments
#A3SS: alternative 3' splice sites
A3SS=read.table("A3SS.MATS.JC.txt",header=TRUE)
A3SS=transform(A3SS,IJC_SAMPLE_1=colsplit(IJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
A3SS=transform(A3SS,SJC_SAMPLE_1=colsplit(SJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
A3SS=transform(A3SS,IJC_SAMPLE_2=colsplit(IJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
A3SS=transform(A3SS,SJC_SAMPLE_2=colsplit(SJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))

A3SS=transform(A3SS,IncLevel1=colsplit(IncLevel1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
A3SS=transform(A3SS,IncLevel2=colsplit(IncLevel2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
nrow(A3SS) #Nb of total splice variants

A3SS=A3SS[A3SS$FDR<0.05,] #Select the significant ones
write.csv(A3SS,file="A3SS_malevsfemale_FDR.csv") #Create the file with significant ones
nrow(A3SS) #Nb of significant variants

A3SS$IJC_sum=rowSums(A3SS$IJC_SAMPLE_1)+rowSums(A3SS$IJC_SAMPLE_2)
A3SS$SJC_sum=rowSums(A3SS$SJC_SAMPLE_1)+rowSums(A3SS$SJC_SAMPLE_2)
A3SS_count_over_20=A3SS[A3SS$IJC_sum>20&A3SS$SJC_sum>20,]
write.csv(A3SS_count_over_20,file="A3SS_malevsfemale_FDR_count20.csv")
nrow(A3SS_count_over_20) #Nb of significant variants with SJC and IJC >20

#A5SS: alternative 5'splice sites
A5SS=read.table("A5SS.MATS.JC.txt",header=TRUE)
A5SS=transform(A5SS,IJC_SAMPLE_1=colsplit(IJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
A5SS=transform(A5SS,SJC_SAMPLE_1=colsplit(SJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
A5SS=transform(A5SS,IJC_SAMPLE_2=colsplit(IJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
A5SS=transform(A5SS,SJC_SAMPLE_2=colsplit(SJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))

A5SS=transform(A5SS,IncLevel1=colsplit(IncLevel1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
A5SS=transform(A5SS,IncLevel2=colsplit(IncLevel2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
nrow(A5SS) #Nb of total splice variants

A5SS=A5SS[A5SS$FDR<0.05,] #Select the significant ones
write.csv(A5SS,file="A5SS_malevsfemale_FDR.csv") #Create the file with significant ones
nrow(A5SS) #Nb of significant variants

A5SS$IJC_sum=rowSums(A5SS$IJC_SAMPLE_1)+rowSums(A5SS$IJC_SAMPLE_2)
A5SS$SJC_sum=rowSums(A5SS$SJC_SAMPLE_1)+rowSums(A5SS$SJC_SAMPLE_2)
A5SS_count_over_20=A5SS[A5SS$IJC_sum>20&A5SS$SJC_sum>20,]
write.csv(A5SS_count_over_20,file="A5SS_malevsfemale_FDR_count20.csv")
nrow(A5SS_count_over_20) #Nb of significant variants with SJC and IJC >20

#SE: skipped exons
SE=read.table("SE.MATS.JC.txt",header=TRUE)
SE=transform(SE,IJC_SAMPLE_1=colsplit(IJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
SE=transform(SE,SJC_SAMPLE_1=colsplit(SJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
SE=transform(SE,IJC_SAMPLE_2=colsplit(IJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
SE=transform(SE,SJC_SAMPLE_2=colsplit(SJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))

SE=transform(SE,IncLevel1=colsplit(IncLevel1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
SE=transform(SE,IncLevel2=colsplit(IncLevel2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
nrow(SE) #Nb of total splice variants

SE=SE[SE$FDR<0.05,] #Select the significant ones
write.csv(SE,file="SE_malevsfemale_FDR.csv") #Create the file with significant ones
nrow(SE) #Nb of significant variants

SE$IJC_sum=rowSums(SE$IJC_SAMPLE_1)+rowSums(SE$IJC_SAMPLE_2)
SE$SJC_sum=rowSums(SE$SJC_SAMPLE_1)+rowSums(SE$SJC_SAMPLE_2)
SE_count_over_20=SE[SE$IJC_sum>20&SE$SJC_sum>20,]
write.csv(SE_count_over_20,file="SE_malevsfemale_FDR_count20.csv")
nrow(SE_count_over_20) #Nb of significant variants with SJC and IJC >20

#MXE: mutually exclusive exons
MXE=read.table("MXE.MATS.JC.txt",header=TRUE)
MXE=transform(MXE,IJC_SAMPLE_1=colsplit(IJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
MXE=transform(MXE,SJC_SAMPLE_1=colsplit(SJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
MXE=transform(MXE,IJC_SAMPLE_2=colsplit(IJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
MXE=transform(MXE,SJC_SAMPLE_2=colsplit(SJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))

MXE=transform(MXE,IncLevel1=colsplit(IncLevel1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
MXE=transform(MXE,IncLevel2=colsplit(IncLevel2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
nrow(MXE) #Nb of total splice variants

MXE=MXE[MXE$FDR<0.05,] #Select the significant ones
write.csv(MXE,file="MXE_malevsfemale_FDR.csv") #Create the file with significant ones
nrow(MXE) #Nb of significant variants

MXE$IJC_sum=rowSums(MXE$IJC_SAMPLE_1)+rowSums(MXE$IJC_SAMPLE_2)
MXE$SJC_sum=rowSums(MXE$SJC_SAMPLE_1)+rowSums(MXE$SJC_SAMPLE_2)
MXE_count_over_20=MXE[MXE$IJC_sum>20&MXE$SJC_sum>20,]
write.csv(MXE_count_over_20,file="MXE_malevsfemale_FDR_count20.csv")
nrow(MXE_count_over_20) #Nb of significant variants with SJC and IJC >20

#RI: retained intron
RI=read.table("RI.MATS.JC.txt",header=TRUE)
RI=transform(RI,IJC_SAMPLE_1=colsplit(IJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
RI=transform(RI,SJC_SAMPLE_1=colsplit(SJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
RI=transform(RI,IJC_SAMPLE_2=colsplit(IJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
RI=transform(RI,SJC_SAMPLE_2=colsplit(SJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))

RI=transform(RI,IncLevel1=colsplit(IncLevel1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
RI=transform(RI,IncLevel2=colsplit(IncLevel2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
nrow(RI) #Nb of total splice variants

RI=RI[RI$FDR<0.05,] #Select the significant ones
write.csv(RI,file="MXE_malevsfemale_FDR.csv") #Create the file with significant ones
nrow(RI) #Nb of significant variants

RI$IJC_sum=rowSums(RI$IJC_SAMPLE_1)+rowSums(RI$IJC_SAMPLE_2)
RI$SJC_sum=rowSums(RI$SJC_SAMPLE_1)+rowSums(RI$SJC_SAMPLE_2)
RI_count_over_20=RI[RI$IJC_sum>20&RI$SJC_sum>20,]
write.csv(RI_count_over_20,file="RI_malevsfemale_FDR_count20.csv")
nrow(RI_count_over_20) #Nb of significant variants with SJC and IJC >20

# Generate all DSG data together
A3SS_count_over_20$Type=rep("A3SS",nrow(A3SS_count_over_20))
A5SS_count_over_20$Type=rep("A5SS",nrow(A5SS_count_over_20))
MXE_count_over_20$Type=rep("MXE",nrow(MXE_count_over_20))
SE_count_over_20$Type=rep("SE",nrow(SE_count_over_20))
RI_count_over_20$Type=rep("RI",nrow(RI_count_over_20))

DSG=rbind(rbind(rbind(rbind(A3SS_count_over_20[,c(2,20,23,26)]
                            ,A5SS_count_over_20[,c(2,20,23,26)])
                      ,MXE_count_over_20[,c(2,22,25,28)])
                ,SE_count_over_20[,c(2,20,23,26)])
          ,RI_count_over_20[,c(2,20,23,26)])
DSG$absIncleveldifference=abs(DSG$IncLevelDifference)
write.csv(DSG,file="DS_events_malevsfemale.csv") # Total DS events between treatments

# The DS event with the largest absIncleveldifference of a DSG represent the differential splicing level of the gene.
DSG_unique_gene=DSG[order(DSG[,'GeneID'],-DSG[,'absIncleveldifference']),]
DSG_unique_gene=DSG_unique_gene[!duplicated(DSG_unique_gene$GeneID),]
write.csv(DSG_unique_gene,file="DSG_malevsfemale_unique.csv") # Total unique DS genes between treatments

#Generate all gene splicing data, including those not differentialy spliced. 
#This is used to build the scatter plot for DEG vs DSG comparison.
A3SS=read.table("A3SS.MATS.JC.txt",header=TRUE)
A3SS=transform(A3SS,IJC_SAMPLE_1=colsplit(IJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
A3SS=transform(A3SS,SJC_SAMPLE_1=colsplit(SJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
A3SS=transform(A3SS,IJC_SAMPLE_2=colsplit(IJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
A3SS=transform(A3SS,SJC_SAMPLE_2=colsplit(SJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
A3SS=transform(A3SS,IncLevel1=colsplit(IncLevel1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
A3SS=transform(A3SS,IncLevel2=colsplit(IncLevel2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
A3SS$IJC_sum=rowSums(A3SS$IJC_SAMPLE_1)+rowSums(A3SS$IJC_SAMPLE_2)
A3SS$SJC_sum=rowSums(A3SS$SJC_SAMPLE_1)+rowSums(A3SS$SJC_SAMPLE_2)
A3SS_all=A3SS[A3SS$IJC_sum>20&A3SS$SJC_sum>20,]

A5SS=read.table("A5SS.MATS.JC.txt",header=TRUE)
A5SS=transform(A5SS,IJC_SAMPLE_1=colsplit(IJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
A5SS=transform(A5SS,SJC_SAMPLE_1=colsplit(SJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
A5SS=transform(A5SS,IJC_SAMPLE_2=colsplit(IJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
A5SS=transform(A5SS,SJC_SAMPLE_2=colsplit(SJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
A5SS=transform(A5SS,IncLevel1=colsplit(IncLevel1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
A5SS=transform(A5SS,IncLevel2=colsplit(IncLevel2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
A5SS$IJC_sum=rowSums(A5SS$IJC_SAMPLE_1)+rowSums(A5SS$IJC_SAMPLE_2)
A5SS$SJC_sum=rowSums(A5SS$SJC_SAMPLE_1)+rowSums(A5SS$SJC_SAMPLE_2)
A5SS_all=A5SS[A5SS$IJC_sum>20&A5SS$SJC_sum>20,]

SE=read.table("SE.MATS.JC.txt",header=TRUE)
SE=transform(SE,IJC_SAMPLE_1=colsplit(IJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
SE=transform(SE,SJC_SAMPLE_1=colsplit(SJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
SE=transform(SE,IJC_SAMPLE_2=colsplit(IJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
SE=transform(SE,SJC_SAMPLE_2=colsplit(SJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
SE=transform(SE,IncLevel1=colsplit(IncLevel1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
SE=transform(SE,IncLevel2=colsplit(IncLevel2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
SE$IJC_sum=rowSums(SE$IJC_SAMPLE_1)+rowSums(SE$IJC_SAMPLE_2)
SE$SJC_sum=rowSums(SE$SJC_SAMPLE_1)+rowSums(SE$SJC_SAMPLE_2)
SE_all=SE[SE$IJC_sum>20&SE$SJC_sum>20,]

MXE=read.table("MXE.MATS.JC.txt",header=TRUE)
MXE=transform(MXE,IJC_SAMPLE_1=colsplit(IJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
MXE=transform(MXE,SJC_SAMPLE_1=colsplit(SJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
MXE=transform(MXE,IJC_SAMPLE_2=colsplit(IJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
MXE=transform(MXE,SJC_SAMPLE_2=colsplit(SJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
MXE=transform(MXE,IncLevel1=colsplit(IncLevel1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
MXE=transform(MXE,IncLevel2=colsplit(IncLevel2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
MXE$IJC_sum=rowSums(MXE$IJC_SAMPLE_1)+rowSums(MXE$IJC_SAMPLE_2)
MXE$SJC_sum=rowSums(MXE$SJC_SAMPLE_1)+rowSums(MXE$SJC_SAMPLE_2)
MXE_all=MXE[MXE$IJC_sum>20&MXE$SJC_sum>20,]

RI=read.table("RI.MATS.JC.txt",header=TRUE)
RI=transform(RI,IJC_SAMPLE_1=colsplit(IJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
RI=transform(RI,SJC_SAMPLE_1=colsplit(SJC_SAMPLE_1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
RI=transform(RI,IJC_SAMPLE_2=colsplit(IJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
RI=transform(RI,SJC_SAMPLE_2=colsplit(SJC_SAMPLE_2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
RI=transform(RI,IncLevel1=colsplit(IncLevel1,split=",",names=c('MB01','MB02','MB03','MB04','MB05')))
RI=transform(RI,IncLevel2=colsplit(IncLevel2,split=",",names=c('NB01','NB02','NB03','NB04','NB05')))
RI$IJC_sum=rowSums(RI$IJC_SAMPLE_1)+rowSums(RI$IJC_SAMPLE_2)
RI$SJC_sum=rowSums(RI$SJC_SAMPLE_1)+rowSums(RI$SJC_SAMPLE_2)
RI_all=RI[RI$IJC_sum>20&RI$SJC_sum>20,]

# Combine
A3SS_all$Type=rep("A3SS",nrow(A3SS_all))
A5SS_all$Type=rep("A5SS",nrow(A5SS_all))
MXE_all$Type=rep("MXE",nrow(MXE_all))
SE_all$Type=rep("SE",nrow(SE_all))
RI_all$Type=rep("RI",nrow(RI_all))

SG_all=rbind(rbind(rbind(rbind(A3SS_all[,c(2,20,23,26)]
                               ,A5SS_all[,c(2,20,23,26)])
                         ,MXE_all[,c(2,22,25,28)])
                   ,SE_all[,c(2,20,23,26)])
             ,RI_all[,c(2,20,23,26)])
SG_all$absIncleveldifference=abs(SG_all$IncLevelDifference)

# Only keep the splicing event with the max asbIncleveldiff for a unique gene list.
SG_unique_gene=SG_all[order(SG_all[,'GeneID'],-SG_all[,'absIncleveldifference']),]
SG_unique_gene=SG_unique_gene[!duplicated(SG_unique_gene$GeneID),]
write.csv(SG_unique_gene,file="SG_malevsfemale_unique.csv") #This is used for the DEG vs DSG scatter plot.


#BUILD SCATTER PLOTS DSG VERSUS DEG
#Create a table with the gene list, their log2foldchange and the deltaPSI (inclusion level difference)
#Take DSG from the DSG_unique.csv output, take non-DSG DEG from the DS_unique.csv output 

setwd("C:/Users/molen/Desktop/transcriptomics_analysis/Splicing_analysis/splicing_brains_april23/DEGxDSG")
list.files("C:/Users/molen/Desktop/transcriptomics_analysis/Splicing_analysis/splicing_brains_april23/DEGxDSG")
library(ggplot2)
library(Rmisc)
library(RColorBrewer)

DEGvsDSG=read.table("MvsN_data.txt",header=TRUE)
summarySE(data=DEGvsDSG,measurevar="deltapsi",groupvars="group",conf.interval=0.95,na.rm=TRUE)
summarySE(data=DEGvsDSG,measurevar="lfc",groupvars="group",conf.interval=0.95,na.rm=TRUE)
head(DEGvsDSG)

plot<-ggplot(DEGvsDSG,aes(x=lfc,y=deltapsi,color=group)) + 
  geom_point() +
  xlim(-10,10) +
  ylim(-1,1) +
  geom_point(size=4) +
  scale_color_manual(values = c("#985CE5", "#0177BB"))+
  xlab("Gene expression (log2FC)") +
  ylab("Alternative splicing (\u0394PSI)") +
  theme(legend.position="none") +
  theme_light () +
  theme(text=element_text(size=20,face="bold")) +
  theme(axis.title.x = element_text(size=20,face="bold"),axis.title.y=element_text(size=20,face="bold")) 

ggsave("DEGxDSG.png",plot=plot())

#BUILD NB OF DSG AND DEG PLOT 
library(ggplot2)
library(wesanderson)
setwd("C:/Users/molen/Desktop/transcriptomics_analysis/Splicing_analysis/splicing_brains_april23") 
list.files("C:/Users/molen/Desktop/transcriptomics_analysis/Splicing_analysis/splicing_brains_april23") 

genenb<-read.table("deg&dsg_nb.txt",header=T)
head(genenb)

plot<-ggplot(genenb,aes(x=comparison,y=number,fill=genetype)) +
  geom_bar(stat = "identity", position = "dodge") +
  scale_fill_manual(values=wes_palette("Darjeeling1", n = 2)) +
  ylab("Gene number") +
  xlab("") + 
  labs(fill="") + 
  scale_x_discrete(limits = c("MvsN", "NvsWt", "WtvsNB1" , "WtvsNB2", "NB1vsNB2")) +
  theme(axis.title.y = element_text(face="bold",size=12)) + 
  theme(legend.title=element_text(face="bold",size=12)) +
  theme(legend.text = element_text(color="black",size=12)) +
  theme(axis.line=element_line(color="black", linewidth=1)) +
  theme(axis.text=element_text(color="black",size=12)) +
  theme(axis.ticks=element_line(linewidth = 1)) +
  theme(axis.ticks.length =unit(0.2, "cm")) +
  theme(panel.background=element_rect(fill="white"))
plot
ggsave("dsgxdeg_nb.png",plot=plot())

#BUILDING VENN DIAGRAM FOR DSG
library(ggplot2)
library(ggVennDiagram)

setwd("C:/Users/molen/Desktop/transcriptomics_analysis/Splicing_analysis/splicing_brains_april23") 
list.files("C:/Users/molen/Desktop/transcriptomics_analysis/Splicing_analysis/splicing_brains_april23")

dsgVenn<-read.table("DSG_vennData.txt",header=T)
head(dsgVenn)

plot <- ggVennDiagram(dsgVenn,category.names = c("WtvsNB1","WtvsNB2","NB1vsNB2"), label="count", label_alpha = 0, set_size = 5,edge_size = 2) +
  scale_fill_distiller(palette = "YlGn") 
plot
ggsave("DSG_Venn.png",plot=plot())
